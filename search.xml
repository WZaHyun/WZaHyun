<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[flask+mongodb 前端頁面獲取數據庫數據示例]]></title>
    <url>%2F2019%2F03%2F09%2Fflask%2Bmongodb%20%E5%89%8D%E7%AB%AF%E9%A0%81%E9%9D%A2%E9%A1%AF%E7%A4%BA%E6%95%B8%E6%93%9A%E7%A4%BA%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[templates-my_template.html-test2.htmltest.py test.py 連接數據庫 點擊事件input獲取數值1234567891011121314151617181920212223242526272829from flask import Flask,render_template,url_for,requestimport pymongoapp = Flask(__name__)db = pymongo.MongoClient('localhost',27017).Sina #Sina是數據庫名稱collection = db.Information #集合/table@app.route('/')def my_echart():#在浏览器上渲染my_templaces.html模板 return render_template('my_template.html')@app.route('/search', methods=['post']) #點擊search事件def search(): id = request.form.get('fname') # print(collection.find_one(&#123;'_id': id&#125;)) res = collection.find_one(&#123;'_id': id&#125;) #find_one返回一條數據 if res != None: return render_template('test2.html', fname=id,re=res)#渲染網頁，直接輸入名稱不需要路徑，傳參 return render_template('my_template.html') if __name__ == "__main__": #运行项目 app.run(debug = True) my_template.html1234567......&lt;div style="padding-left:304px;"&gt; &lt;form action="search" method="post"&gt; 请输入ID: &lt;input type="text" name="fname" /&gt; &lt;input type="submit" class="btn btn-default" value="立即创建" /&gt;&lt;/form&gt;&lt;/div&gt;...... test2.html12345678910111213141516......&lt;div style="padding-left:304px;"&gt; 对ID：&#123;&#123;fname&#125;&#125;信息解析 #直接使用變量&lt;/div&gt;......&lt;div style="padding-left:304px;"&gt;&lt;ul&gt; &lt;li&gt;&#123;&#123;re['_id']&#125;&#125;&lt;/li&gt; #獲得對象屬性 &lt;li&gt;&#123;&#123;re['nick_name']&#125;&#125;&lt;/li&gt; &lt;li&gt;&#123;&#123;re['gender']&#125;&#125;&lt;/li&gt; &lt;li&gt;&#123;&#123;re['province']&#125;&#125;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;...... 通過以上代碼可以實現獲取表單信息（所需的查詢id），並通過id獲取數據庫的數據顯示在前端頁面中注意：find_one()與find()的區別分別獲取的數據在html頁面的使用上有所差別具體可以瀏覽↓ find_one()/find()：https://blog.csdn.net/Steven_2669/article/details/77104629傳參：https://www.jianshu.com/p/1213dadb2a71]]></content>
      <tags>
        <tag>flask</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Taylor】Rep巡演纪录片]]></title>
    <url>%2F2019%2F01%2F01%2F%E3%80%90Taylor%E3%80%91Rep%E5%B7%A1%E6%BC%94%E7%BA%AA%E5%BD%95%E7%89%87%2F</url>
    <content type="text"><![CDATA[链接：https://pan.baidu.com/s/1RHyrK6eghgd8uJt3tCqQyg提取码：uisj复制这段内容后打开百度网盘手机App，操作更方便哦]]></content>
      <tags>
        <tag>Taylor</tag>
        <tag>巡演</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Cisco】基礎與三種路由協議配置]]></title>
    <url>%2F2017%2F11%2F26%2F%E3%80%90Cisco%E3%80%91%E5%9F%BA%E7%A1%80%E4%B8%8E%E4%B8%89%E7%A7%8D%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor. 軟件：Cisco Packet Tracer5 協議：靜態/RIP/OSPF ⚠️三種協議必須分開配置，否則按默認優先級排序 1.配置基礎eg.網酪拓撲圖所示 PC0-192.168.50.1/255.255.255.128/192.168.50.126PC1-192.168.50.2/255.255.255.128/192.168.50.126PC2-192.168.50.129/255.255.255.128/192.168.50.254PC3-192.168.50.130/255.255.255.128/192.168.50.254 主要步驟：壹開啟路由器端口 Router&gt;en（進入特權）Router#configure terminal（conf ter全局配置模式）Router(config)#inter f0/0（進入f0/0端口）Router(config-if)#no sh（開啟端口）Router(config-if)#exitRouter(config)#inter f0/1（進入f0/1端口）Router(config-if)#no shRouter(config-if)#exit 此時路由器兩端變為綠色易遺漏步驟→端口默認關閉，用no shutdown（no sh）命令把端口開啟 二具體配置f0/0 &amp; f0/1 Router(config)#inter f0/0Router(config-if)#ip add 192.168.50.126 255.255.255.128Router(config-if)#exitRouter(config)#inter f0/1Router(config-if)#ip add 192.168.50.254 255.255.255.128 ③測試如圖配置成功！ 2.靜態路由協議配置eg.網酪拓撲圖所示 PC0-192.168.50.1/255.255.255.224/192.168.50.30PC1-192.168.50.2/255.255.255.224/192.168.50.30PC2-192.168.50.33/255.255.255.224/192.168.50.62PC3-192.168.50.34/255.255.255.224/192.168.50.62cPC0-192.168.50.65/255.255.255.224/192.168.50.94cPC1-192.168.50.66/255.255.255.224/192.168.50.94cPC2-192.168.50.97/255.255.255.224/192.168.50.126cPC3-192.168.50.98/255.255.255.224/192.168.50.126 壹相關端口配置與基礎類似略 二路由器物理設備設置路由器必須如圖配置，否則無e0/0/0 ⭐③R0與cR0 靜態 R0 Router&gt;enRouter#conf terRouter(config)#inter e0/0/0Router(config-if)#ip add 192.168.50.129 255.255.255.224Router(config-if)#no sh cR0 Router&gt;enRouter#conf terRouter(config)#inter e0/0/0Router(config-if)#ip add 192.168.50.130 255.255.255.224Router(config-if)#no sh 註意-此時不通，未配置路由協議 R0 至目標網酪號+下壹跳 Router(config)#ip rou 192.168.50.64 255.255.255.224 192.168.50.130Router(config)#ip rou 192.168.50.96 255.255.255.224 192.168.50.130cR0 至目標網酪號+下壹跳 Router(config)#ip rou 192.168.50.0 255.255.255.224 192.168.50.129Router(config)#ip rou 192.168.50.32 255.255.255.224 192.168.50.129 四測試圖配置成功！ 3.RIP動態路由協議配置 壹-二相同略 ⭐③R0與cR0 RIP R0 Router(config)#rou ripRouter(config-router)#ver 2Router(config-router)#netw 192.168.50.64Router(config-router)#netw 192.168.50.96Router(config-router)#netw 192.168.50.128 cR0 Router(config)#rou ripRouter(config-router)#ver 2Router(config-router)#netw 192.168.50.0Router(config-router)#netw 192.168.50.32Router(config-router)#netw 192.168.50.128 四測試圖配置成功！ 4.OSPF動態路由協議配置 壹-二相同略 ⭐③R0與cR0 OSPF R0 Router(config)#rout ospf 100Router(config-router)#network 192.168.50.0 0.0.0.31 area 1Router(config-router)#network 192.168.50.32 0.0.0.31 area 1Router(config-router)#network 192.168.50.128 0.0.0.31 area 1 cR0 Router(config)#rout ospf 100Router(config-router)#network 192.168.50.64 0.0.0.31 area 1Router(config-router)#network 192.168.50.96 0.0.0.31 area 1Router(config-router)#network 192.168.50.128 0.0.0.31 area 1 四測試如圖配置成功！]]></content>
      <tags>
        <tag>Cisco</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基於C#計算器源代碼]]></title>
    <url>%2F2017%2F11%2F26%2F%E8%AE%A1%E7%AE%97%E5%99%A8%E6%BA%90%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[實現窗體展示 鏈接：http://pan.baidu.com/s/1jHQEr58 密碼：4gj2]]></content>
      <tags>
        <tag>C#</tag>
        <tag>源代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F11%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
